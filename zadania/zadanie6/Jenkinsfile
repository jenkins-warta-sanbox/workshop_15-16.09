pipeline {
    agent any
    triggers {
        // pipeline musi zostać uruchomiony przynajmniej raz aby trigger został aktywowany
        pollSCM 'H/2 * * * *'
    }
    options {
        timestamps()
    }
    stages {
        stage('zbuduj') {
            steps {
                git '<ŚCIEŻKA_DO_REPOZYTORIUM>'
                sh './mvnw package'
                junit 'target/surefire-reports/*.xml'
                jacoco()
                sh 'echo $WORKSPACE'
            }
        }
        stage('zapewnienie jakości') {
            parallel {
                stage('przetestuj') {
                    steps {
                        sh 'echo $WORKSPACE'
                    }
                }
                stage('przeskanuj zależności projektu') {
                    when {
                        not {
                            changelog '.*\\[HOTFIX\\].*'
                        }
                    }
                    steps {
                        sh './mvnw dependency-check:aggregate'
                    }
                }                
            }
        }
        stage('akceptacja wdrożenia') {
           steps {
                input message: 'Kontynuować wdrożenie na środowisko docelowe?', ok: 'Tak'
            }
        }
        stage('wdróż') {
            steps {
                echo 'wdrażam'
                withCredentials([string(credentialsId: '<CREDENTIALS_ID_DLA_TOKENA_CHATU_ZOOM>', variable: 'ZOOM_TOKEN')], [string(credentialsId: '<CREDENTIALS_ID_DLA_WEBHOOK_URL_CHATU_ZOOM>', variable: 'ZOOM_WEBHOOK')]) {
                        zoomSend(
                            authToken: env.ZOOM_TOKEN,
                            jenkinsProxyUsed: true,
                            message: "${currentBuild.projectName} build successful",
                            webhookUrl: env.ZOOM_WEBHOOK)
                    }
                }
            }
        }
    }
}

